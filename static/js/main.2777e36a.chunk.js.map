{"version":3,"sources":["components/Like.js","components/FetchNasaData.js","App.js","reportWebVitals.js","index.js"],"names":["Like","state","liked","toggle","localLiked","setState","className","Button","onClick","this","IconButton","size","Component","FetchNasaData","loading","data","a","fetch","response","json","console","log","LinearProgress","Typography","variant","map","nasa","Card","sx","maxWidth","margin","CardActionArea","CardMedia","component","height","image","url","alt","CardContent","gutterBottom","title","date","color","explanation","CardActions","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2YAQMA,E,4MACFC,MAAQ,CAAEC,OAAO,G,EACjBC,OAAS,WACL,IAAIC,EAAa,EAAKH,MAAMC,MAG5BE,GAAcA,EAEd,EAAKC,SAAS,CAAEH,MAAOE,K,4CAG3B,WAAU,IAAD,OACL,OACI,qBAAKE,UAAU,YAAf,SACI,iCACI,cAACC,EAAA,EAAD,CACID,UAAU,WAEVE,QAAS,kBAAM,EAAKL,UAHxB,UAK0B,IAArBM,KAAKR,MAAMC,MAER,eAACQ,EAAA,EAAD,CAAY,aAAW,OAAOC,KAAK,QAAnC,sBACe,cAAC,IAAD,OAKf,eAACD,EAAA,EAAD,CAAY,aAAW,SAASC,KAAK,QAArC,wBACiB,cAAC,IAAD,iB,GA7B1BC,aAuCJZ,ICnCMa,E,kDACnB,aAAe,IAAD,8BACZ,gBACKZ,MAAQ,CAAEa,SAAS,EAAMC,KAAM,IAFxB,E,4FAKd,8BAAAC,EAAA,sEACyBC,MAAM,iGAD/B,cACQC,EADR,gBAEqBA,EAASC,OAF9B,OAEQA,EAFR,OAGEV,KAAKJ,SAAS,CAAEU,KAAMI,EAAML,SAAS,IACrCM,QAAQC,IAAIZ,KAAKR,MAAMc,MAJzB,gD,0EAOA,WACE,OACE,8BACGN,KAAKR,MAAMa,UAAYL,KAAKR,MAAMc,KACjC,gCACE,cAACO,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,wCAIF,8BACGf,KAAKR,MAAMc,KAAKU,KAAI,SAAAC,GAAI,OACvB,eAACC,EAAA,EAAD,CAAMC,GAAI,CAAEC,SAAU,IAAKC,OAAQ,IAAnC,UAEE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,UAAU,MACVC,OAAO,MACPC,MAAOT,EAAKU,IACZC,IAAI,YAEN,eAACC,EAAA,EAAD,WACE,cAACf,EAAA,EAAD,CAAYgB,cAAY,EAACf,QAAQ,KAAKS,UAAU,MAAhD,SACGP,EAAKc,QAER,cAACjB,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BE,EAAKe,OAC/B,cAAClB,EAAA,EAAD,CAAYC,QAAQ,QAAQkB,MAAM,iBAAlC,SACGhB,EAAKiB,oBAIZ,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,oB,GA7CyBhC,aCH5BiC,MAPf,WACE,OACE,cAAC,EAAD,KCQWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2777e36a.chunk.js","sourcesContent":["\nimport React, { Component } from \"react\";\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport ThumbDownRoundedIcon from '@mui/icons-material/ThumbDownRounded';\nimport { Button, Typography } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\n\n\nclass Like extends Component {\n    state = { liked: false };\n    toggle = () => {\n        let localLiked = this.state.liked;\n\n        // Toggle the state variable liked\n        localLiked = !localLiked;\n\n        this.setState({ liked: localLiked });\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <center>\n                    <Button\n                        className=\"outlined\"\n\n                        onClick={() => this.toggle()}\n                    >\n                        {this.state.liked === false ? (\n\n                            <IconButton aria-label=\"like\" size=\"large\">\n                                Like &nbsp;<ThumbUpIcon />\n                            </IconButton>\n\n\n                        ) : (\n                            <IconButton aria-label=\"unlike\" size=\"large\">\n                                Unlike &nbsp;<ThumbDownRoundedIcon />\n                            </IconButton>\n                        )}\n                    </Button>\n                </center>\n            </div>\n        );\n    }\n}\n\nexport default Like;","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { Button, CardActionArea, CardActions, CardHeader } from '@mui/material';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport { LinearProgress } from \"@mui/material\";\nimport Like from \"./Like\";\n\n\nexport default class FetchNasaData extends Component {\n  constructor() {\n    super();\n    this.state = { loading: true, data: [] };\n  }\n\n  async componentDidMount() {\n    const response = await fetch(`https://api.nasa.gov/planetary/apod?count=10&api_key=zHWg1nr3oN2kjkqClj5KbkXiVaVstauO5hkEc0Rm`);\n    const json = await response.json();\n    this.setState({ data: json, loading: false });\n    console.log(this.state.data)\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.loading || !this.state.data ? (\n          <div>\n            <LinearProgress />\n            <Typography variant=\"h1\">Loading, please wait...</Typography>\n          </div>\n\n        ) : (\n          <div>\n            {this.state.data.map(nasa => (\n              <Card sx={{ maxWidth: 345, margin: 10 }}>\n\n                <CardActionArea>\n                  <CardMedia\n                    component=\"img\"\n                    height=\"200\"\n                    image={nasa.url}\n                    alt=\"Picture\"\n                  />\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h4\" component=\"div\">\n                      {nasa.title}\n                    </Typography>\n                    <Typography variant=\"h6\">{nasa.date}</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {nasa.explanation}\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n                <CardActions>\n                  <Like />\n                </CardActions>\n              </Card>\n            ))}\n          </div>)}\n      </div>\n\n    );\n  }\n}\n\n\n","import FetchNasaData from \"./components/FetchNasaData\";\n\nfunction App() {\n  return (\n    <FetchNasaData />\n \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}